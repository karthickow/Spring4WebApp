<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd">
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:mymessages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	<!-- <security:http pattern="/resources" security="none"/> -->
	
	<security:http use-expressions="true" disable-url-rewriting="true">
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/login-form" access="permitAll" />
		<security:intercept-url pattern="/logout" access="permitAll" />
		<security:intercept-url pattern="/denied" access="permitAll" />
		<security:intercept-url pattern="/user" access="hasRole('ROLE_MODERATOR')" />
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/employee" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/employee/*" access="hasRole('ROLE_ADMIN')" />
	
		<security:form-login login-page="/login-form" authentication-failure-url="/failure" default-target-url="/home" />
		<security:access-denied-handler error-page="/denied" />	
		<security:logout invalidate-session="false" delete-cookies="JSESSIONID" logout-success-url="/" logout-url="/logout" />
		
		<security:session-management invalid-session-url="/expired-session"> <!-- Redirects to this URL if session times out -->
			<security:concurrency-control expired-url="/invalid-session" max-sessions="1" error-if-maximum-exceeded="true" /> <!-- Wont allow you to login second time because error-if-maximum-exceeded is set to true -->
			<!-- <security:concurrency-control expired-url="/invalid-session" max-sessions="1" /> --> <!-- Allow you to login second time but invalidates the already logged-in session because max-sessions is set to 1 -->
		</security:session-management>
		
	</security:http>
	
	<security:authentication-manager>
		<security:ldap-authentication-provider 
			user-search-filter="(uid={0})"
			user-search-base="ou=users"
			group-search-filter="(uniqueMember={0})"
			group-search-base="ou=groups"
			group-role-attribute="cn"
			role-prefix="ROLE_">
		</security:ldap-authentication-provider>
	</security:authentication-manager>
	
	<security:ldap-server url="${ldap.url}"  manager-dn="${manager.dn}" manager-password="${manager.password}" />
	
<!-- 	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder hash="plaintext" />
		</security:authentication-provider>
	</security:authentication-manager> -->
	
<!-- <security:http auto-config="true">
		
		<security:intercept-url pattern="/welcome*" access="ROLE_USER,ROLE_ADMIN"/>
		<security:http-basic/>
		<security:form-login/>
		<security:logout logout-success-url="/home"/>
		
		<security:form-login login-page="/login" default-target-url="/welcome"
							  authentication-failure-url="/loginFailed"/>
		<security:logout logout-success-url="/logout"/>
		
	</security:http> -->
	
<!-- 	<security:authentication-manager>
		<security:authentication-provider>
		Encoding password using algorithm
		<security:password-encoder hash="sha-256"/>
			<security:user-service>
				<security:user name="karthick" password="123" authorities="ROLE_USER"/>
				<security:user name="karthick" password="da70dfa4d9f95ac979f921e8e623358236313f334afcd06cddf8a5621cf6a1e9" authorities="ROLE_USER"/>
				<security:user name="kaviya" password="97a6d21df7c51e8289ac1a8c026aaac143e15aa1957f54f42e30d8f8a85c3a55" authorities="ROLE_USER"/>
			</security:user-service>
			Validating credentials against database
			<security:jdbc-user-service authorities-by-username-query="${auth_query}" 
			 	users-by-username-query="${user_query}"	data-source-ref="dataSource"/>
		</security:authentication-provider>
	</security:authentication-manager> -->

</beans>
